{"ast":null,"code":"import _classCallCheck from \"/Users/ataashu/developer/sew/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ataashu/developer/sew/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ataashu/developer/sew/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ataashu/developer/sew/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ataashu/developer/sew/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ataashu/developer/sew/src/components/content/OptionCTA.js\";\nimport React, { Component, Fragment } from 'react';\nimport { create } from 'istanbul-reports';\n\nvar OptionCTA =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(OptionCTA, _Component);\n\n  function OptionCTA(props) {\n    var _this;\n\n    _classCallCheck(this, OptionCTA);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OptionCTA).call(this, props));\n    _this.state = {\n      json: _this.props.jsonOption,\n      ctaNum: 0,\n      ctaContent: ''\n    };\n    return _this;\n  }\n\n  _createClass(OptionCTA, [{\n    key: \"addingCta\",\n    value: function addingCta(e) {\n      e.preventDefault();\n      var ctaCurrNum = this.state.ctaNum;\n\n      function create(ctaCurrNum) {\n        var inx = ctaCurrNum + 1;\n        var linkInputs = React.createElement(\"div\", {\n          key: inx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          key: \"key_Text\" + inx,\n          htmlFor: \"text-input-ctaText_\" + inx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, \"Text:\", React.createElement(\"input\", {\n          \"data-instancename\": \"text\",\n          id: \"text-input-ctaText_\" + inx,\n          name: \"text\",\n          placeholder: item.text,\n          type: \"text\",\n          defaultValue: item.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        })), React.createElement(\"label\", {\n          key: \"key__href\" + inx,\n          htmlFor: \"text-input-ctaLink_\" + inx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, \"Link:\", React.createElement(\"input\", {\n          \"data-instancename\": \"href\",\n          id: \"text-input-ctaLink_\" + inx,\n          name: \"href\",\n          placeholder: item.href,\n          type: \"text\",\n          defaultValue: item.href,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        })));\n      } // let linkInputs = this.state.json.map((item, index) => {\n      //     return (\n      //     <div key={index}><label key={\"key_Text\"+index} htmlFor={\"text-input-ctaText_\"+index}>Text:<input data-instancename=\"text\" id={\"text-input-ctaText_\"+index} name=\"text\" placeholder={item.text} type=\"text\" defaultValue={item.text}/></label><label key={\"key__href\"+index} htmlFor={\"text-input-ctaLink_\"+index}>Link:<input data-instancename=\"href\" id={\"text-input-ctaLink_\"+index} name=\"href\" placeholder={item.href} type=\"text\" defaultValue={item.href} /></label></div>);\n      //   });\n\n\n      this.setState({\n        ctaNum: ctaCurrNum + 1,\n        ctaContent: ''\n      });\n    }\n  }, {\n    key: \"removingCta\",\n    value: function removingCta(e) {\n      var ctaCurrNum = this.state.ctaNum;\n      e.preventDefault();\n      this.setState({\n        ctaNum: ctaCurrNum === 0 ? ctaCurrNum : ctaCurrNum - 1\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"addCta\",\n        style: {\n          \"visibility\": \"\".concat(this.props.visibility)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.addingCta.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"add cta\"), React.createElement(\"button\", {\n        onClick: this.removingCta.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"remove cta\")));\n    }\n  }]);\n\n  return OptionCTA;\n}(Component);\n\n;\nexport default OptionCTA;","map":{"version":3,"sources":["/Users/ataashu/developer/sew/src/components/content/OptionCTA.js"],"names":["React","Component","Fragment","create","OptionCTA","props","state","json","jsonOption","ctaNum","ctaContent","e","preventDefault","ctaCurrNum","inx","linkInputs","item","text","href","setState","visibility","addingCta","bind","removingCta"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,MAAT,QAAuB,kBAAvB;;IAGMC,S;;;;;AAEF,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAW;AACPC,MAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWG,UADV;AAEPC,MAAAA,MAAM,EAAG,CAFF;AAGPC,MAAAA,UAAU,EAAE;AAHL,KAAX;AAFc;AAOjB;;;;8BAESC,C,EAAE;AACRA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAIC,UAAU,GAAG,KAAKP,KAAL,CAAWG,MAA5B;;AACA,eAASN,MAAT,CAAgBU,UAAhB,EAA2B;AACvB,YAAIC,GAAG,GAAGD,UAAU,GAAG,CAAvB;AACA,YAAIE,UAAU,GACV;AAAK,UAAA,GAAG,EAAED,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAe;AAAO,UAAA,GAAG,EAAE,aAAWA,GAAvB;AAA4B,UAAA,OAAO,EAAE,wBAAsBA,GAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAqE;AAAO,+BAAkB,MAAzB;AAAgC,UAAA,EAAE,EAAE,wBAAsBA,GAA1D;AAA+D,UAAA,IAAI,EAAC,MAApE;AAA2E,UAAA,WAAW,EAAEE,IAAI,CAACC,IAA7F;AAAmG,UAAA,IAAI,EAAC,MAAxG;AAA+G,UAAA,YAAY,EAAED,IAAI,CAACC,IAAlI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAArE,CAAf,EAAqO;AAAO,UAAA,GAAG,EAAE,cAAYH,GAAxB;AAA6B,UAAA,OAAO,EAAE,wBAAsBA,GAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAsE;AAAO,+BAAkB,MAAzB;AAAgC,UAAA,EAAE,EAAE,wBAAsBA,GAA1D;AAA+D,UAAA,IAAI,EAAC,MAApE;AAA2E,UAAA,WAAW,EAAEE,IAAI,CAACE,IAA7F;AAAmG,UAAA,IAAI,EAAC,MAAxG;AAA+G,UAAA,YAAY,EAAEF,IAAI,CAACE,IAAlI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtE,CAArO,CADJ;AAEG,OAPC,CASR;AACA;AACA;AACA;;;AACD,WAAKC,QAAL,CAAc;AACbV,QAAAA,MAAM,EAAGI,UAAU,GAAG,CADT;AAEbH,QAAAA,UAAU,EAAE;AAFC,OAAd;AAIF;;;gCACWC,C,EAAE;AACV,UAAIE,UAAU,GAAG,KAAKP,KAAL,CAAWG,MAA5B;AACAE,MAAAA,CAAC,CAACC,cAAF;AACD,WAAKO,QAAL,CAAc;AACbV,QAAAA,MAAM,EAAII,UAAU,KAAK,CAAhB,GAAsBA,UAAtB,GAAmCA,UAAU,GAAG;AAD5C,OAAd;AAGF;;;6BAEG;AACJ,aACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAwB,QAAA,KAAK,EAAE;AAAC,kCAAgB,KAAKR,KAAL,CAAWe,UAA3B;AAAD,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAE,KAAKC,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAQ,QAAA,OAAO,EAAE,KAAKC,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,CADJ,CADJ;AAQH;;;;EA9CuBrB,S;;AAgDvB;AAED,eAAeG,SAAf","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport { create } from 'istanbul-reports';\n\n\nclass OptionCTA extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            json: this.props.jsonOption,\n            ctaNum : 0,\n            ctaContent: ''\n        }\n    }\n\n    addingCta(e){\n        e.preventDefault();\n        let ctaCurrNum = this.state.ctaNum;\n        function create(ctaCurrNum){\n            let inx = ctaCurrNum + 1;\n            let linkInputs =\n                <div key={inx}><label key={\"key_Text\"+inx} htmlFor={\"text-input-ctaText_\"+inx}>Text:<input data-instancename=\"text\" id={\"text-input-ctaText_\"+inx} name=\"text\" placeholder={item.text} type=\"text\" defaultValue={item.text}/></label><label key={\"key__href\"+inx} htmlFor={\"text-input-ctaLink_\"+inx}>Link:<input data-instancename=\"href\" id={\"text-input-ctaLink_\"+inx} name=\"href\" placeholder={item.href} type=\"text\" defaultValue={item.href} /></label></div>;\n              }\n        \n        // let linkInputs = this.state.json.map((item, index) => {\n        //     return (\n        //     <div key={index}><label key={\"key_Text\"+index} htmlFor={\"text-input-ctaText_\"+index}>Text:<input data-instancename=\"text\" id={\"text-input-ctaText_\"+index} name=\"text\" placeholder={item.text} type=\"text\" defaultValue={item.text}/></label><label key={\"key__href\"+index} htmlFor={\"text-input-ctaLink_\"+index}>Link:<input data-instancename=\"href\" id={\"text-input-ctaLink_\"+index} name=\"href\" placeholder={item.href} type=\"text\" defaultValue={item.href} /></label></div>);\n        //   });\n       this.setState({\n        ctaNum : ctaCurrNum + 1,\n        ctaContent: ''\n       })\n    }\n    removingCta(e){\n        let ctaCurrNum = this.state.ctaNum;\n        e.preventDefault();\n       this.setState({\n        ctaNum : (ctaCurrNum === 0 ) ? ctaCurrNum : ctaCurrNum - 1\n       })\n    }\n\nrender(){\n    return(\n        <Fragment>\n            <div className=\"addCta\" style={{\"visibility\":`${this.props.visibility}`}}>\n                <button onClick={this.addingCta.bind(this)}>add cta</button>\n                <button onClick={this.removingCta.bind(this)}>remove cta</button>\n            </div>\n        </Fragment>\n    );\n};\n\n};\n\nexport default OptionCTA;"]},"metadata":{},"sourceType":"module"}