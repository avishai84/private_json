{"ast":null,"code":"import _classCallCheck from \"/Users/ataashu/developer/sew/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ataashu/developer/sew/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ataashu/developer/sew/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ataashu/developer/sew/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ataashu/developer/sew/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ataashu/developer/sew/src/components/content/OptionCTA.js\";\nimport React, { Component, Fragment } from 'react';\nimport { create } from 'istanbul-reports';\n\nvar OptionCTA =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(OptionCTA, _Component);\n\n  function OptionCTA(props) {\n    var _this;\n\n    _classCallCheck(this, OptionCTA);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OptionCTA).call(this, props));\n    _this.state = {\n      json: _this.props.jsonOption.content,\n      ctaNum: 0,\n      ctaContent: 'No Content Yet',\n      isDropdown: false,\n      ctaArr: 0,\n      lengthCtaArr: _this.props.jsonOption.content.length,\n      ctaCount: 0\n    };\n    return _this;\n  }\n\n  _createClass(OptionCTA, [{\n    key: \"addingCta\",\n    value: function addingCta(e) {\n      // adding a duplicate of the array from this.props.jsonOption.content\n      e.preventDefault();\n      var ctaCurrNum = this.state.ctaNum + 1;\n      var linkInputs = this.state.json.map(function (item, index) {\n        return React.createElement(\"div\", {\n          key: ctaCurrNum,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          key: \"key_Text\" + ctaCurrNum,\n          htmlFor: \"text-input-ctaText_\" + ctaCurrNum,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \"Text:\", React.createElement(\"input\", {\n          \"data-instancename\": \"text\",\n          id: \"text-input-ctaText_\" + ctaCurrNum,\n          name: \"text\",\n          placeholder: item.text,\n          type: \"text\",\n          defaultValue: item.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        })), React.createElement(\"label\", {\n          key: \"key__href\" + ctaCurrNum,\n          htmlFor: \"text-input-ctaLink_\" + ctaCurrNum,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \"Link:\", React.createElement(\"input\", {\n          \"data-instancename\": \"href\",\n          id: \"text-input-ctaLink_\" + ctaCurrNum,\n          name: \"href\",\n          placeholder: item.href,\n          type: \"text\",\n          defaultValue: item.href,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        })));\n      });\n      console.log({\n        linkInputs: linkInputs\n      }); // const newArr = [];\n      //  for(let i=0; i < this.state.ctaCount; i++){\n      //     newArr.push([this.props.jsonOption.content[0]])\n      // };\n\n      this.setState({\n        ctaNum: ctaCurrNum === 4 ? ctaCurrNum : ctaCurrNum + 1,\n        ctaContent: linkInputs,\n        // json: newArr,\n        ctaCount: this.state.ctaCount + 1\n      });\n      this.props.addCtaArr(this.state.ctaCount); // let linkInputs = this.state.json.map((item, ctaArr) => {\n      //     return();\n      // });\n    }\n  }, {\n    key: \"removingCta\",\n    value: function removingCta(e) {\n      console.log('removingCta before ' + this.state.ctaCount);\n      var ctaCurrNum = this.state.ctaNum; // const newArr = [this.props.jsonOption.content];\n\n      e.preventDefault();\n      this.setState({\n        ctaNum: ctaCurrNum === 0 ? ctaCurrNum : ctaCurrNum - 1,\n        // json: newArr.pop(),\n        ctaCount: this.state.ctaCount - 1\n      });\n      this.props.rmvCtaArr(this.state.ctaCount);\n    }\n  }, {\n    key: \"handleFormChange\",\n    value: function handleFormChange() {\n      console.log('change detected!');\n    }\n  }, {\n    key: \"dropdownSelected\",\n    value: function dropdownSelected(e) {\n      console.log(this.state.isDropdown);\n      this.setState({\n        isDropdown: !this.state.isDropdown\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('this.state.ctaCount ' + this.state.ctaCount);\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"addCta\",\n        style: {\n          \"visibility\": \"\".concat(this.props.visibility)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultValue: this.state.isDropdown,\n        onChange: this.dropdownSelected.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Create Dropdown\"), React.createElement(\"button\", {\n        onClick: this.addingCta.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"add cta\"), React.createElement(\"button\", {\n        onClick: this.removingCta.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"remove cta\"), React.createElement(\"div\", {\n        className: \"ctas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, this.state.ctaCount, React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inputElems\",\n        onChange: this.handleFormChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, this.state.ctaContent)))));\n    }\n  }]);\n\n  return OptionCTA;\n}(Component);\n\n;\nexport default OptionCTA;","map":{"version":3,"sources":["/Users/ataashu/developer/sew/src/components/content/OptionCTA.js"],"names":["React","Component","Fragment","create","OptionCTA","props","state","json","jsonOption","content","ctaNum","ctaContent","isDropdown","ctaArr","lengthCtaArr","length","ctaCount","e","preventDefault","ctaCurrNum","linkInputs","map","item","index","text","href","console","log","setState","addCtaArr","rmvCtaArr","visibility","dropdownSelected","bind","addingCta","removingCta","handleFormChange"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport { create } from 'istanbul-reports';\n\n\nclass OptionCTA extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            json: this.props.jsonOption.content,\n            ctaNum : 0,\n            ctaContent: 'No Content Yet',\n            isDropdown: false,\n            ctaArr : 0,\n            lengthCtaArr : this.props.jsonOption.content.length,\n            ctaCount : 0,\n        }\n    }\n\n    addingCta(e){\n        // adding a duplicate of the array from this.props.jsonOption.content\n\n        e.preventDefault();\n        let ctaCurrNum = this.state.ctaNum + 1;\n\n        let linkInputs = this.state.json.map((item, index) => {\n            return (\n            <div key={ctaCurrNum}><label key={\"key_Text\"+ctaCurrNum} htmlFor={\"text-input-ctaText_\"+ctaCurrNum}>Text:<input data-instancename=\"text\" id={\"text-input-ctaText_\"+ctaCurrNum} name=\"text\" placeholder={item.text} type=\"text\" defaultValue={item.text}/></label><label key={\"key__href\"+ctaCurrNum} htmlFor={\"text-input-ctaLink_\"+ctaCurrNum}>Link:<input data-instancename=\"href\" id={\"text-input-ctaLink_\"+ctaCurrNum} name=\"href\" placeholder={item.href} type=\"text\" defaultValue={item.href} /></label></div>);\n          });\n\n            console.log({linkInputs});\n\n        // const newArr = [];\n        //  for(let i=0; i < this.state.ctaCount; i++){\n        //     newArr.push([this.props.jsonOption.content[0]])\n        // };\n    \n       this.setState({\n        ctaNum : (ctaCurrNum === 4 ) ? ctaCurrNum : ctaCurrNum + 1,\n        ctaContent: linkInputs,\n    \n        // json: newArr,\n        ctaCount: this.state.ctaCount + 1\n       })\n       this.props.addCtaArr(this.state.ctaCount);\n\n\n\n\n\n        // let linkInputs = this.state.json.map((item, ctaArr) => {\n        //     return();\n        // });\n\n\n\n    }\n\n\n\n\n\n    removingCta(e){\n        console.log('removingCta before ' + this.state.ctaCount );\n         let ctaCurrNum = this.state.ctaNum;\n        // const newArr = [this.props.jsonOption.content];\n        e.preventDefault();\n       this.setState({\n        ctaNum : (ctaCurrNum === 0 ) ? ctaCurrNum : ctaCurrNum - 1,\n        // json: newArr.pop(),\n        ctaCount: this.state.ctaCount - 1\n       })\n       this.props.rmvCtaArr(this.state.ctaCount);\n    }\n\n\n    handleFormChange(){\n        console.log('change detected!');\n    }\n\n\n\n    dropdownSelected(e){\n        console.log(this.state.isDropdown );\n        this.setState({\n            isDropdown: !this.state.isDropdown \n        })\n    }\nrender(){\n    console.log('this.state.ctaCount ' + this.state.ctaCount );\n    return(\n        <Fragment>\n            <div className=\"addCta\" style={{\"visibility\":`${this.props.visibility}`}}>\n                <input type=\"checkbox\" defaultValue={this.state.isDropdown} onChange={this.dropdownSelected.bind(this)} /><span>Create Dropdown</span>\n                <button onClick={this.addingCta.bind(this)}>add cta</button>\n                <button onClick={this.removingCta.bind(this)}>remove cta</button>\n                <div className=\"ctas\">\n                    {this.state.ctaCount}\n                    <Fragment>\n                        <div className=\"inputElems\" onChange={this.handleFormChange.bind(this)}>\n                            {this.state.ctaContent}\n                        </div>\n                    </Fragment>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\n};\n\nexport default OptionCTA;"]},"metadata":{},"sourceType":"module"}