{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ataashu/developer/sew/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/ataashu/developer/sew/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/ataashu/developer/sew/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/ataashu/developer/sew/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ataashu/developer/sew/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ataashu/developer/sew/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ataashu/developer/sew/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ataashu/developer/sew/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ataashu/developer/sew/src/components/content/OptionCTA.js\";\nimport React, { Component, Fragment } from 'react';\nvar newArr = [];\n\nvar OptionCTA =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(OptionCTA, _Component);\n\n  function OptionCTA(props) {\n    var _this;\n\n    _classCallCheck(this, OptionCTA);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OptionCTA).call(this, props));\n    _this.state = {\n      json: _this.props.jsonOption.content,\n      ctaContent: newArr,\n      isDropdown: false,\n      ctaCount: 1\n    };\n    return _this;\n  }\n\n  _createClass(OptionCTA, [{\n    key: \"addingCta\",\n    value: function () {\n      var _addingCta = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var _this2 = this;\n\n        var linkInputs, linkInputsObj;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // adding a duplicate of the array from this.props.jsonOption.content\n                e.preventDefault();\n                linkInputs = this.state.json.map(function (item, index) {\n                  return React.createElement(\"div\", {\n                    key: 'added_Cta' + _this2.state.ctaCount,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 22\n                    },\n                    __self: this\n                  }, React.createElement(\"label\", {\n                    key: \"key_Text\" + _this2.state.ctaCount,\n                    htmlFor: \"text-input-ctaText_\" + _this2.state.ctaCount,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 22\n                    },\n                    __self: this\n                  }, \"Text:\", React.createElement(\"input\", {\n                    \"data-instancename\": \"text\",\n                    id: \"text-input-ctaText_\" + _this2.state.ctaCount,\n                    name: \"text\",\n                    placeholder: item.text,\n                    type: \"text\",\n                    Value: item.text,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 22\n                    },\n                    __self: this\n                  })), React.createElement(\"label\", {\n                    key: \"key__href\" + _this2.state.ctaCount,\n                    htmlFor: \"text-input-ctaLink_\" + _this2.state.ctaCount,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 22\n                    },\n                    __self: this\n                  }, \"Link:\", React.createElement(\"input\", {\n                    \"data-instancename\": \"href\",\n                    id: \"text-input-ctaLink_\" + _this2.state.ctaCount,\n                    name: \"href\",\n                    placeholder: item.href,\n                    type: \"text\",\n                    Value: item.href,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 22\n                    },\n                    __self: this\n                  })));\n                }); // convert array to object to prevent deep nesting inside the new array.\n\n                linkInputsObj = Object.assign.apply(Object, [{}].concat(_toConsumableArray(linkInputs)));\n                newArr.push(linkInputsObj);\n                _context.next = 6;\n                return this.setState({\n                  ctaCount: this.state.ctaCount + 1,\n                  ctaContent: newArr\n                });\n\n              case 6:\n                this.props.addCtaArr(this.state.ctaCount, this.state.ctaContent);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function addingCta(_x) {\n        return _addingCta.apply(this, arguments);\n      }\n\n      return addingCta;\n    }()\n  }, {\n    key: \"removingCta\",\n    value: function () {\n      var _removingCta = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                e.preventDefault(); // remove last in the array of inputs\n\n                newArr.pop();\n                _context2.next = 4;\n                return this.setState({\n                  ctaCount: this.state.ctaCount - 1,\n                  ctaContent: newArr,\n                  ctaArr: newArr.length\n                });\n\n              case 4:\n                // callback to pass on data\n                this.props.addCtaArr(this.state.ctaCount, this.state.ctaContent);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function removingCta(_x2) {\n        return _removingCta.apply(this, arguments);\n      }\n\n      return removingCta;\n    }()\n  }, {\n    key: \"handleFormChange\",\n    value: function handleFormChange() {// console.log('change detected!');\n    }\n  }, {\n    key: \"dropdownSelected\",\n    value: function dropdownSelected(e) {\n      this.setState({\n        isDropdown: !this.state.isDropdown\n      });\n    } // shouldComponentUpdate(nextProps, nextState) {\n    //     console.log('nextState: '+nextState.isDropdown?true:false);\n    //     console.log('nextState: '+nextProps.isDropdown?true:false);\n    // }\n    // componentWillReceiveProps(nextProps) {\n    //    // console.log('nextProps: '+nextProps.newArr);\n    //    // this.setState({ctaContent: nextProps.newArr});\n    // }\n    // componentWillRecieveProps(newProps) \n    // { \n    //     if (this.props !== newProps) { \n    //         console.log(\" New Props have been assigned \"); \n    //         // Use this.setState() to rerender the page. \n    //     } \n    // } \n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var pluralS = this.state.ctaCount >= 3 ? \"S \" : '';\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"addCta\",\n        style: {\n          \"visibility\": \"\".concat(this.props.visibility)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"checkbox_dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"p-3\",\n        type: \"checkbox\",\n        defaultValue: this.state.isDropdown,\n        onChange: this.dropdownSelected.bind(this),\n        id: \"checkbox_dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"p-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Create Dropdown\")), React.createElement(\"div\", {\n        className: \"d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, this.state.ctaCount >= 2 ? React.createElement(\"button\", {\n        type: \"button\",\n        className: \"text-uppercase m-1 btn btn-danger\",\n        onClick: this.removingCta.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"remove cta\") : React.createElement(\"button\", {\n        type: \"button\",\n        className: \"text-uppercase m-1 btn btn-danger\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"remove cta\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"text-uppercase m-1 btn btn-primary\",\n        onClick: this.addingCta.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"add cta\"), React.createElement(\"div\", {\n        className: \"ctas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.state.ctaCount >= 2 ? \"Total CTA\".concat(pluralS, \": \").concat(this.state.ctaCount - 1) : ''))), React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inputElems\",\n        onChange: this.handleFormChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, this.state.ctaContent))));\n    }\n  }]);\n\n  return OptionCTA;\n}(Component);\n\n;\nexport default OptionCTA;","map":{"version":3,"sources":["/Users/ataashu/developer/sew/src/components/content/OptionCTA.js"],"names":["React","Component","Fragment","newArr","OptionCTA","props","state","json","jsonOption","content","ctaContent","isDropdown","ctaCount","e","preventDefault","linkInputs","map","item","index","text","href","linkInputsObj","Object","assign","push","setState","addCtaArr","pop","ctaArr","length","pluralS","visibility","dropdownSelected","bind","removingCta","addingCta","handleFormChange"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nconst newArr = [];\n\nclass OptionCTA extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            json: this.props.jsonOption.content,\n            ctaContent: newArr,\n            isDropdown: false,\n            ctaCount : 1,\n        }\n    }\n\n     async addingCta(e){\n        // adding a duplicate of the array from this.props.jsonOption.content\n        e.preventDefault();\n       \n            const linkInputs = this.state.json.map((item, index) => {\n                return (\n                <div key={'added_Cta'+this.state.ctaCount}><label key={\"key_Text\"+this.state.ctaCount} htmlFor={\"text-input-ctaText_\"+this.state.ctaCount}>Text:<input data-instancename=\"text\" id={\"text-input-ctaText_\"+this.state.ctaCount} name=\"text\" placeholder={item.text} type=\"text\" Value={item.text}/></label><label key={\"key__href\"+this.state.ctaCount} htmlFor={\"text-input-ctaLink_\"+this.state.ctaCount}>Link:<input data-instancename=\"href\" id={\"text-input-ctaLink_\"+this.state.ctaCount} name=\"href\" placeholder={item.href} type=\"text\" Value={item.href} /></label></div>);\n              });\n             // convert array to object to prevent deep nesting inside the new array.\n              const linkInputsObj = Object.assign({}, ...linkInputs);\n              newArr.push(linkInputsObj);\n\n            await this.setState({\n                ctaCount: this.state.ctaCount + 1,\n                ctaContent: newArr\n            })\n        this.props.addCtaArr(this.state.ctaCount, this.state.ctaContent);\n\n     }\n\n     async removingCta(e){\n        e.preventDefault();\n        // remove last in the array of inputs\n        newArr.pop();\n        await this.setState({\n            ctaCount: this.state.ctaCount - 1, \n            ctaContent: newArr,\n            ctaArr : newArr.length\n        })\n        // callback to pass on data\n       this.props.addCtaArr(this.state.ctaCount, this.state.ctaContent);\n    }\n\n\n    handleFormChange(){\n       // console.log('change detected!');\n    }\n\n    dropdownSelected(e){\n        this.setState({\n            isDropdown: !this.state.isDropdown \n        })\n    }\n    // shouldComponentUpdate(nextProps, nextState) {\n    //     console.log('nextState: '+nextState.isDropdown?true:false);\n    //     console.log('nextState: '+nextProps.isDropdown?true:false);\n    // }\n    // componentWillReceiveProps(nextProps) {\n    //    // console.log('nextProps: '+nextProps.newArr);\n    //    // this.setState({ctaContent: nextProps.newArr});\n    // }\n    // componentWillRecieveProps(newProps) \n    // { \n    //     if (this.props !== newProps) { \n    //         console.log(\" New Props have been assigned \"); \n    //         // Use this.setState() to rerender the page. \n    //     } \n    // } \n\n\nrender(){\n\n    const pluralS = (this.state.ctaCount >= 3) ? `S `: '';\n\n    return(\n        <Fragment> \n            <div className=\"addCta\" style={{\"visibility\":`${this.props.visibility}`}}>\n                <label htmlFor=\"checkbox_dropdown\">\n                    <input className=\"p-3\" type=\"checkbox\" defaultValue={this.state.isDropdown} onChange={this.dropdownSelected.bind(this)} id=\"checkbox_dropdown\"/>\n                    <span className=\"p-1\">Create Dropdown</span>\n                </label>\n                <div className=\"d-flex\">\n                    {(this.state.ctaCount >= 2)? <button type=\"button\" className=\"text-uppercase m-1 btn btn-danger\" onClick={this.removingCta.bind(this)}>remove cta</button> : <button type=\"button\" className=\"text-uppercase m-1 btn btn-danger\" disabled>remove cta</button>}\n                    <button type=\"button\" className=\"text-uppercase m-1 btn btn-primary\" onClick={this.addingCta.bind(this)}>add cta</button>\n                    <div className=\"ctas\">\n                        <p>{(this.state.ctaCount >= 2)? `Total CTA${pluralS}: ${this.state.ctaCount - 1}`:''}</p>\n                    </div>\n                </div>\n                <Fragment>\n                    <div className=\"inputElems\" onChange={this.handleFormChange.bind(this)}>\n                        {this.state.ctaContent}\n                    </div>\n                </Fragment>\n            </div>\n        </Fragment>\n    );\n};\n\n};\n\nexport default OptionCTA;"]},"metadata":{},"sourceType":"module"}